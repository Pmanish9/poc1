name: Code coverage
run-name: ${{ github.actor }} is executing code coverage Actions
on:
  pull_request:
    branches:
      - main

permissions: write-all
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running the code coverage"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: go mod download
      - name: Run tests and generate coverage report
        run: go test -coverprofile=coverage.out -covermode=count ./...
      - name: Comment code coverage on PR
        run: |
          set -x
          totalcc=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "total_cc=$totalcc" >> $GITHUB_ENV
      - name: Comment on Pull Request
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(context)
            const { owner, repo, number } = context.issue;
            const message = 'Code coverage is ${{env.total_cc}}%';
            const { data: comments } = await github.issues.listComments({
              owner,
              repo,
              issue_number: number
            });
            const lastComment = comments[comments.length - 1];
            await github.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: message,
              in_reply_to: lastComment.id
            });
               