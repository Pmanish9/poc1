name: Code coverage
run-name: ${{ github.actor }} is executing code coverage Actions
on:
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Running the code coverage"
      - name: Checkout code
        uses: actions/checkout@v2
      - name: setup Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.20'
      - name: Install dependencies
        run: go mod download
      - name: Run tests and generate coverage report
        run: go test -coverprofile=coverage.out -covermode=count ./...
      - name: print code coverage
        run: |
          set -x
          total=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "Code coverage is $total" >> $GITHUB_OUTPUT
      - name: show CC on PR 
        id: set-val-1
        run: echo "Code coverage is $total" >> $GITHUB_OUTPUT
        
        

      # - name: Create coverage output
      #   id: create-coverage-output
      #   if: always()
      #   run: |
      #    covRes=$(cat coverage.out)
      #    covRes="${covRes//$'\n'/'<br>'}"
      #    covRes="${covRes//$'\r'/'<br>'}"
      #    echo "result=$covRes" >> $GITHUB_OUTPUT

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v3
      #   with:
      #     file: ./coverage.xml
      #     #token: ${{ secrets.CODECOV_TOKEN }}
      #     flags: unittests
      #     version: "v0.1.15"
